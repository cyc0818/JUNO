<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xdd SYSTEM "xdd.dtd">

<xdd>
    <package name="ElecEvent">

        <import name="Event/EventObject"/> 
        <import name="Event/ElecWaveform"/>
        <import name="Context/TimeStamp.h"/>
        <import name="vector" std="TRUE"/>
        <import name="map" std="TRUE"/>

        <class name="CdWaveformEvt"
            author="Teng Li"
            desc="">

            <base name="EventObject"/>

            <attribute
                name="channelData"
                desc="Map between PmtId and ElecWaveform"
                type="std::map&lt;int,JM::ElecWaveform*&gt;"
                />

            <method
                name="addChannel"
                desc="Add a PMT channel to this event"
                argList="int pmtID"
                type="JM::ElecWaveform*">
            <code>
  JM::ElecWaveform* channel = new JM::ElecWaveform;
  auto it = m_channelData.find(pmtID);
  if (it == m_channelData.end()) {
    m_channelData[pmtID] = channel;
  }
  else {
    delete it->second;
    it->second = channel;
  }
  return channel;
            </code>
            </method>

            <method
                name="addChannel"
                desc="Add a PMT channel to this event"
                argList="int pmtID,JM::ElecWaveform* channel"
                type="void">
            <code>
  auto it = m_channelData.find(pmtID);
  if (it == m_channelData.end()) {
    m_channelData[pmtID] = channel;
  }
  else {
    delete it->second;
    it->second = channel;
  }
            </code>
            </method>

            <method
                name="getChannel"
                desc="Get a PMT channel from this event"
                argList="int pmtID"
                type="JM::ElecWaveform*">
            <code>
  auto it = m_channelData.find(pmtID);
  if (it != m_channelData.end()) {
    return it->second;
  }
  return 0;
            </code>
            </method>

            <destructor desc="destructor for CdWaveformEvt">
                <code>
  for (auto it: m_channelData) {
    delete it.second;
  }
                </code>
            </destructor>

        </class>
    </package>
</xdd>

