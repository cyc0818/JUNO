
# Show packages
# create setup script
get_property(OFFLINE_ALL_PACKAGES
    GLOBAL
    PROPERTY OFFLINE_PACKAGES
)
message("ALL PACKAGES: " "${OFFLINE_ALL_PACKAGES}")

file(WRITE ${CMAKE_BINARY_DIR}/setup.sh.in
    "#!/bin/bash\n"
    "# Generated by cmake \n"
    "export JUNO_OFFLINE_VERSION=@offline_VERSION@\n"
    "export CMAKE_PREFIX_PATH=@CMAKE_INSTALL_PREFIX@:\${CMAKE_PREFIX_PATH}\n"
    "export PATH=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@:\${PATH}\n"
    "export LD_LIBRARY_PATH=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@:\${LD_LIBRARY_PATH}\n"
    "export PYTHONPATH=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@:\${PYTHONPATH}\n"
    "export PYTHONPATH=@CMAKE_INSTALL_PREFIX@/python:\${PYTHONPATH}\n"
    "\n"
)
file(WRITE ${CMAKE_BINARY_DIR}/setup.csh.in
    "#!/bin/tcsh\n"
    "# Generated by cmake \n"
    "setenv JUNO_OFFLINE_VERSION @offline_VERSION@\n"
    "setenv CMAKE_PREFIX_PATH @CMAKE_INSTALL_PREFIX@:\${CMAKE_PREFIX_PATH}\n"
    "setenv PATH @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@:\${PATH}\n"
    "setenv LD_LIBRARY_PATH @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@:\${LD_LIBRARY_PATH}\n"
    "setenv PYTHONPATH @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@:\${PYTHONPATH}\n"
    "setenv PYTHONPATH @CMAKE_INSTALL_PREFIX@/python:\${PYTHONPATH}\n"
    "\n"
)

# ${PACKAGE}ROOT ENVVAR
foreach (_p ${OFFLINE_ALL_PACKAGES})
    set(_p_r)
    get_property(_p_r GLOBAL PROPERTY ${_p}_root)

    set(_p_env_name)
    string(TOUPPER "${_p}ROOT" _p_env_name)

    message("PACKAGE ${_p} ${_p_env_name} ${_p_r}")
    file(APPEND ${CMAKE_BINARY_DIR}/setup.sh.in
        "export ${_p_env_name}=${_p_r}\n"
    )
    file(APPEND ${CMAKE_BINARY_DIR}/setup.csh.in
        "setenv ${_p_env_name} ${_p_r}\n"
    )
endforeach(_p)

# Additional ENVVAR

    file(APPEND ${CMAKE_BINARY_DIR}/setup.sh.in
        "\n# Additional Environment Variables creating using SETENV \n"
    )
    file(APPEND ${CMAKE_BINARY_DIR}/setup.csh.in
        "\n# Additional Environment Variables creating using SETENV \n"
    )

foreach (_p ${OFFLINE_ALL_PACKAGES})

    get_property(_p_envs GLOBAL PROPERTY ${_p}_extraenv)
    foreach (_p_env ${_p_envs})
        get_property(_p_envval GLOBAL PROPERTY ${_p_env})
        message("PACKAGE ${_p} Additional envvar: ${_p_env}=${_p_envval}")
        file(APPEND ${CMAKE_BINARY_DIR}/setup.sh.in
            "export ${_p_env}=${_p_envval}\n"
        )
        file(APPEND ${CMAKE_BINARY_DIR}/setup.csh.in
            "setenv ${_p_env} ${_p_envval}\n"
        )
        
    endforeach()

endforeach()
